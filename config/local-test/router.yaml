global:
  dequeue: true
  executor:
    rest:
      max_inflight: 10
      watchdog_timeout: 10
    output:
      max_inflight: 100
      watchdog_timeout: 60
  mailer_daemon_mailbox: mailer-daemon@example.com
  rest_id_entropy: 4

rest_listener:
  addr: ["127.0.0.1", 8000]
  #cert: localhost.crt
  #key: localhost.key

  # base uri of this instance/replica to redirect clients for multi-node
  # endpoints with rest_lro: false will be qualified to this
  session_uri: http://localhost:8000
  # e.g. k8s service alias, endpoints with rest_lro: true will be
  # qualified to this
  #service_uri: http://localhost:8000

endpoint:
- name: outbound-gw
  # equivalent to "chain ends with exploder/tx is always ephemeral"
  # create returns uri qualified to ephemeral session rather than
  # canonical service host
  rest_lro: false
  msa: true
  output_handler:
    downstream_timeout: 5
    upstream_refresh: 1
  chain:
  #- filter: relay_auth
  #  smtp_auth: true
  - filter: exploder
    output_chain: msa-output
    msa: true
    rcpt_timeout: 300
    data_timeout: 300

- name: msa-output
  rest_lro: true
  msa: true
  output_handler:
    downstream_timeout: 5
    upstream_refresh: 1

    retry_params:
      mode: per_request
      max_attempts: 3
      min_attempt_time: 2
      max_attempt_time: 5
      backoff_factor: 1.5
      deadline: 30
    notification:
      mode: per_request
      host: submission

  chain:
  - filter: remote_host
  # message_builder must be chained before anything that wants to
  # access/modify the message: received_header, dkim
  - filter: message_builder
  - filter: received_header
    received_hostname: gargantua1    
  - filter: router
    policy:
      name: hello
  # send my own domains directly to my ingress
  - filter: router
    policy:
      name: address_list
      domains:
      - example.com
      - rest-application.example.com
      destination:
        endpoint: http://localhost:8000
        http_host: mx-out
  # send everything else to the rhs of the addr via the smtp gw
  - filter: router
    policy:
      name: dest_domain
      destination:
        endpoint: http://localhost:8001
        http_host: outbound
  - filter: router
    policy:
      name: address_list
      # no domains/dest -> reject all
  #- filter: dkim
  #  key: config/local-test/dkim.key
  #  domain: example.com
  #  selector: sel
  - filter: hello
  - filter: dns_resolution
    suffix: ''  # match everything
    static_hosts:
      - host: 127.0.0.1
        port: 3025
  - filter: rest_output
    verify: localhost.crt
    rcpt_timeout: 300
    data_timeout: 300
    chunk_size: 1048576

- name: submission
  rest_lro: true
  msa: true
  output_handler:
    downstream_timeout: 5
    upstream_refresh: 1

    retry_params:
      max_attempts: 3
      min_attempt_time: 2
      max_attempt_time: 5
      backoff_factor: 1.5
      deadline: 30

  chain:
  # - filter: remote_host
  # message_builder must be chained before anything that wants to
  # access/modify the message: received_header, dkim
  - filter: message_builder
  # - filter: received_header
  #   received_hostname: gargantua1    
  # - filter: router
  #   policy:
  #     name: hello
  # send my own domains directly to my ingress
  # - filter: router
  #   policy:
  #     name: address_list
  #     domains:
  #     - example.com
  #     - rest-application.example.com
  #     destination:
  #       endpoint: http://localhost:8000
  #       http_host: mx-out
  # send everything else to the rhs of the addr via the smtp gw
  - filter: router
    policy:
      name: dest_domain
      destination:
        endpoint: http://localhost:8001
        http_host: outbound
  # - filter: router
  #   policy:
  #     name: address_list
  #     # no domains/dest -> reject all
  #- filter: dkim
  #  key: config/local-test/dkim.key
  #  domain: example.com
  #  selector: sel
  # - filter: hello
  - filter: dns_resolution
    suffix: ''  # match everything
    static_hosts:
      - host: 127.0.0.1
        port: 3025
  - filter: rest_output
    verify: localhost.crt
    rcpt_timeout: 300
    data_timeout: 300
    chunk_size: 1048576


- name: inbound-gw
  rest_lro: false
  msa: false
  output_handler:
    downstream_timeout: 5
    upstream_refresh: 1
  chain:
  - filter: exploder
    msa: false
    output_chain: mx-out
    rcpt_timeout: 300
    data_timeout: 300

- name: mx-out
  rest_lro: true
  msa: false
  output_handler:
    downstream_timeout: 5
    upstream_refresh: 1

    retry_params:
      mode: per_request
      max_attempts: 3
      min_attempt_time: 2
      max_attempt_time: 5
      backoff_factor: 1.5
      deadline: 30
    notification:
      mode: per_request
      host: submission
  chain:
  - filter: remote_host
  - filter: received_header
    received_hostname: gargantua1    
  - filter: router
    policy:
      name: address_list
      domains:
      - example.com
      #delimiter: '+'
      #prefixes:
      #- base: alice
      destination:
        endpoint: http://localhost:8001
        http_host: outbound
        host_list:
          - host: 'fake_smtpd'
            port: 3025
  - filter: router
    policy:
      name: address_list
      domains:
      - rest-application.example.com
      delimiter: '+'
      prefixes:
      - bob
      destination:
        endpoint: http://localhost:8002
        options:
          receive_parsing:
  - filter: router
    policy:
      name: address_list
      # no domains: match everything
      # dest == None: reject
  - filter: message_parser
  # - filter: add_route
  #   output_chain: sink
  - filter: dns_resolution
    literal: 'fake_smtpd'
    static_hosts:
      - host: 127.0.0.1
        port: 3025
    overwrite: true
  - filter: rest_output
    verify: localhost.crt
    rcpt_timeout: 300
    data_timeout: 300
    chunk_size: 1048576

- name: sink
  chain:
  - filter: rest_output
    rcpt_timeout: 300
    data_timeout: 300
    static_endpoint: http://localhost:8002
    chunk_size: 1048576


modules:
  sync_filter:
    hello: koukan.hello_filter
  recipient_router_policy:
    hello: koukan.hello_policy

storage:
  url: postgresql+psycopg://bucy@/pykk?host=/var/run/postgresql

  gc_interval: 30
  gc_ttl: 3600

  session_refresh_interval: 1

logging:
  version: 1
  loggers:
    hpack:
      level: INFO
